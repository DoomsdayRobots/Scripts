#!/bin/bash
# Installs packages that are useful for a full dev environment.
# Currently targeted at 14.04

echo "Installs packages that are useful for My development environment." 
echo "Currently targeted at Linux Mint 14.04"
echo " "

#----------------Main Installs----------------
echo "Main installs"
sudo apt-get install cmake
sudo apt-get install firefox
sudo apt-get upgrade firefox
sudo apt-get install git
sudo apt-get upgrade git
sudo apt-get install gitk
sudo apt-get upgrade gitk
sudo apt-get install dropbox
sudo apt-get upgrade dropbox
sudo apt-get update
cd /home/david


# Processing
echo "Installing Processing"
cd /home/david
wget http://download.processing.org/processing-3.3.5-linux64.tgz
tar xf processing-3.3.5-linux64.tgz
rm processing-3.3.5-linux64.tgz
cd /home/david/processing-3.3.5
sh install.sh
cd /home/david
sudo apt-get update
cd /home/david


# Arduino
echo "Installing Arduino"
cd /home/david
sudo apt-get install arduino
sudo apt-get upgrade arduino
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch Arduino.desktop
echo " 
[Desktop Entry]
Type=Application
Name=Arduino IDE
GenericName=Create physical computing projects
Exec=arduino
Icon=arduino
Terminal=false
Categories=Development;Engineering;Electronics;
MimeType=text/x-arduino
Keywords=embedded electronics;electronics;avr;microcontroller;">> Arduino.desktop
chmod 777 Arduino.desktop
cd /home/david


#Add USB Support
sudo usermod -a -G dialout david
sudo groupmod -a -G dialout david
sudo groupmod -a -G dialout root
sudo groupmod -a -G dialout adm

sudo groupmod -a -G root david
sudo groupmod -a -G root dialout
sudo Groupmod -a -G root adm

sudo groupmod -a -G adm david
sudo groupmod -a -G adm root
sudo groupmod -a -G adm dialout

sudo chmod 777 ttyACM0
sudo chmod 777 ttyACM1
sudo chmod 777 /dev/ttyUSB0
sudo chmod 777 /dev/ttyUSB1
sudo chmod 777 /dev/ttyS0
sudo chmod 777 /dev/ttyS1
sudo chmod 777 /dev/ttyS31
sudo chmod 777 /dev/ttyS32
sudo chmod 777 /dev/ttyS33
sudo apt-get update
cd /home/david

# BOINC 
echo "Now Installing BOINC"
cd /home/dave
sudo apt-get install boinc-client boinc-manager
cd /home/david/Desktop

touch Boinc.desktop
echo "
[Desktop Entry]
Type=Application
Version=1.0
Exec=boincmgr
Path=/var/lib/boinc-client
Icon=boincmgr
Categories=System;Monitor;GTK;
Keywords=computation;science;
Name=BOINC Manager
GenericName=BOINC monitor and control utility
GenericName[cs]=Monitorovací a ovládací nástroj pro BOINC
GenericName[de]=BOINC Überwachungs- und Kontrollprogramm
GenericName[pt]=Monitorização BOINC e utilitário de controlo
GenericName[pt_BR]=Utilitário de controle e monitoramento do BOINC
Comment=Configure or monitor a BOINC core client
Comment[cs]=Monitoruje a nastavuje klienta BOINC
Comment[de]=BOINC Basis Client konfigurieren oder überwachen
Comment[pt]=Configurar ou monitorizar o cliente básico do BOINC
Comment[pt_BR]=Configure ou monitore o cliente básico do BOINC" >> Boinc.desktop
chmod 777 Boinc.desktop
sudo apt-get update
cd /home/david




# Openscad
echo "Installing OpenScad" 
cd /home/david
sudo add-apt-repository -y ppa:openscad/releases
sudo apt-get update
sudo apt-get install openscad
sudo apt-get upgrade openscad
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch openscad.desktop
echo " 
[Desktop Entry]
Type=Application
Version=1.0
Name=OpenSCAD
Icon=/usr/share/pixmaps/openscad.png
Exec=openscad %f
MimeType=application/x-openscad;
Categories=Graphics;3DGraphics;Engineering;
Terminal=false">> openscad.desktop
chmod 777 openscad.desktop
cd /home/david
sudo apt-get update
cd /home/david


# IDLE 3.4
echo "Installing IDLE3.4" 
cd /home/david
sudo apt-get install idle3
sudo apt-get upgrade idle3
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch idle_3.4.desktop
echo "
[Desktop Entry]
Name=IDLE 3.4
Comment=Integrated Development Environment for Python (using Python-3.6)
Exec=/usr/bin/idle-python3.6
Icon=/usr/share/pixmaps/python3.6.xpm
Terminal=false
Type=Application
Categories=Application;Development;
StartupNotify=true">> idle_3.4.desktop
chmod 777 idle_3.4.desktop
cd /home/david
sudo apt-get update


#----------------Open Cv Installs----------------
cd /home/david
echo "Installing Opencv for python 2.7"
sudo apt-get install python-matplotlib
sudo apt-get install python-pygame
sudo apt-get install python-numpy
sudo apt-get install python-skimage
sudo apt-get install --assume-yes build-essential cmake git
sudo apt-get install --assume-yes pkg-config unzip ffmpeg qtbase5-dev python-dev python3-dev python-numpy python3-numpy
sudo apt-get install --assume-yes libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev
sudo apt-get install --assume-yes libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
sudo apt-get install --assume-yes libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev
sudo apt-get install --assume-yes libvorbis-dev libxvidcore-dev v4l-utils vtk6
sudo apt-get install --assume-yes liblapacke-dev libopenblas-dev libgdal-dev checkinstall

wget -O opencv.zip https://github.com/opencv/opencv/archive/3.3.0.zip
unzip opencv.zip
cd opencv-3.3.0

mkdir build
cd build/    
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D FORCE_VTK=ON -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" -D WITH_GDAL=ON -D WITH_XINE=ON -D BUILD_EXAMPLES=ON ..
make -j $(($(nproc) + 1))

sudo make install
sudo /bin/bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig
sudo apt-get update

cd /home/david
rm /home/david opencv.zip
cd /home/david


#  Testing your OpenCV Install using Python
#python
#import cv2
#cv2.__version__
#'3.3.0'


# Eagle 9.3.0
echo "Installing Eagle 9.3.0"
cd /home/david
sudo apt-get install libcrypto++9:i386
sudo apt-get install libfontconfig:i386
sudo apt-get install libssl1.0.0:i386 
sudo apt-get install libxcursor1:i386  
sudo apt-get install libxi6:i386 
sudo apt-get install libxrender1:i386 
sudo apt-get install libxrandr2:i386  
sudo apt-get upgrade libcrypto++9:i386
sudo apt-get upgrade libfontconfig:i386
sudo apt-get upgrade libssl1.0.0:i386 
sudo apt-get upgrade libxcursor1:i386  
sudo apt-get upgrade libxi6:i386 
sudo apt-get upgrade libxrender1:i386 
sudo apt-get upgrade libxrandr2:i386  
sudo apt-get update

wget https://www.autodesk.com/eagle-download-lin
mv /home/david/eagle-download-lin /home/david/Autodesk_Eagle_9.3.0_English_Linux_64bit.tar.gz 
tar xzf Autodesk_Eagle_9.3.0_English_Linux_64bit.tar.gz 
rm Autodesk_Eagle_9.3.0_English_Linux_64bit.tar.gz 
/home/david/eagle-9.3.0/eagle

cd /home/david/Desktop
touch Eagle.desktop
echo "[Desktop Entry]
Name=Eagle
Exec=/home/david/eagle-9.3.0/eagle
Comment=
Terminal=true
Icon=/home/david/eagle-9.3.0/bin/eagle-logo.png
Type=Application
Hidden=false
NoDisplay=false" >> Eagle.desktop
chmod 777 Eagle.desktop
sudo apt-get update
cd /home/david

# Dropbox 
echo "Installing Dropbox"
cd /home/david
#sudo apt-get install nautilus-dropbox
#sudo apt-get update
#wget https://www.dropbox.com/install
wget https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2019.01.31_amd64.deb


# Cheeze
echo "Installing Cheese"
cd /home/david
sudo apt-get install cheese
sudo apt-get upgrade cheese
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch Cheese.desktop
echo "
[Desktop Entry]
Name=Cheese
GenericName=Webcam Booth
X-GNOME-FullName=Cheese Webcam Booth
Comment=Take photos and videos with your webcam, with fun graphical effects
Keywords=photo;video;webcam;
Exec=cheese
Terminal=false
Type=Application
StartupNotify=true
Icon=org.gnome.Cheese
Categories=GNOME;AudioVideo;Video;Recorder;
X-GNOME-Bugzilla-Bugzilla=GNOME
X-GNOME-Bugzilla-Product=cheese
X-GNOME-Bugzilla-Component=general
X-GNOME-Bugzilla-Version=3.28.0
X-AppStream-Ignore=true
X-Ubuntu-Gettext-Domain=cheese" >> Cheese.desktop
chmod 777 Cheese.desktop
sudo apt-get update
cd /home/david


# Inkscape
echo "InstallingInkscape"
cd /home/david
sudo apt-get install inkscape
sudo apt-get upgrade inkscape
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch inkscape.desktop
echo "[Desktop Entry]
Version=1.0
Name=Inkscape
GenericName=Vector Graphics Editor
X-GNOME-FullName=Inkscape Vector Graphics Editor
Comment=Create and edit Scalable Vector Graphics images
Type=Application
Categories=Graphics;VectorGraphics;GTK;
MimeType=image/svg+xml;image/svg+xml-compressed;application/vnd.corel-draw;application/pdf;application/postscript;image/x-eps;application/illustrator;
Exec=inkscape %F
TryExec=inkscape
Terminal=false
StartupNotify=true
Icon=inkscape
X-Ayatana-Desktop-Shortcuts=Drawing
[Drawing Shortcut Group]
Name=New Drawing
Exec=inkscape
TargetEnvironment=Unity" >> inkscape.desktop
chmod 777 inkscape.desktop
sudo apt-get update
cd /home/david


# Pinta paint program
echo "Installing Pinta"
cd /home/david
sudo apt-get install pinta
sudo apt-get upgrade pinta
sudo apt-get update
cd /home/david

cd /home/david/Desktop
touch Pinta.desktop
echo "[Desktop Entry]
Name=Pinta
Comment=Easily create and edit images
GenericName=Image Editor
X-GNOME-FullName=Pinta Image Editor
Exec=pinta %F
Icon=pinta
StartupNotify=false
Terminal=false
Type=Application
Categories=Graphics;2DGraphics;
MimeType=image/bmp;">> Pinta.desktop
chmod 777 Pinta.desktop
sudo apt-get update
cd /home/david



# Java11 program for linux mint 19
echo "Installing Java 11"
cd /home/david
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update 
sudo apt-get install openjdk-8-jdk openjdk-11-jdk
sudo apt-get upgrade openjdk-8-jdk openjdk-11-jdk
sudo apt-get update 
cd /home/david

# Universal G-code Sender
echo "Installing Universal G-Code Sender"
cd /home/david
wget https://github.com/DoomsdayRobots/Scripts/raw/master/UGS_Icons/UGS_48x48.png
wget http://bit.ly/1M6z2ys
mkdir /home/david/Universal_G-Code_Sender
mv /home/david/UGS_48x48.png /home/david/Universal_G-Code_Sender/UGS_48x48.png
unzip 1M6z2ys -d /home/david/Universal_G-Code_Sender
rm /home/david/1M6z2ys
cd /home/david/Universal_G-Code_Sender
chmod 777 start-windows.bat
chmod 777 start.sh
cd /home/david/Desktop
touch UGS.desktop
echo "
[Desktop Entry]
Comment=none
Terminal=true
Name=UGS
Exec=/home/david/Universal_G-Code_Sender/start.sh
Icon=/home/david/Universal_G-Code_Sender/UGS_48x48.png
Type=Application" >> UGS.desktop

chmod 777 UGS.desktop
cd /home/david
rm /home/david/UGS_Icons
cd /home/david
sudo apt-get update


# Game emulators
# Zsnes
echo " Now installing the game emulator ( Zsnes ) it is an SNES emulator...."
sudo apt-get install zsnes 

# fceux
cd /home/david
echo " Now installing the game emulator ( fceux ) it is an NES emulator...."
sudo apt-get install fceux

# Controller Drivers
echo "Now Installing Joystick Drivers..."  
sudo apt-get install joystick
sudo apt-get install xserver-xorg-input-joystick
jscal /dev/input/js0


#----------------Folder creator----------------
cd /home/david
echo "This is a script to create folder if they don't already exist" 
if [ -d Cad_Stuff] 
then 
    echo "Found the file 'Cad_Stuff'"
else 
    echo "Could not find the file 'Cad_Stuff'"
    mkdir Cad_Stuff
    echo ""
    echo "Created the folder 'Cad_Stuff'"
fi

if [ -d Programing_Stuff ] 
then 
    echo "Found the file 'Programing_Stuff'"
else 
    echo "Could not find the file 'Programing_Stuff'"
    mkdir Programing_Stuff
    cd /home/david/Programing_Stuff
    mkdir Arduino_Stuff
    cd /home/david/Programing_Stuff/Arduino_Stuff
    mkdir Project_SAMAS
    cd /home/david/Programing_Stuff
    mkdir Python_Stuff
    cd /home/david/Programing_Stuff/Python_Stuff
    mkdir Games
    cd /home/david/Programing_Stuff/Python_Stuff
    mkdir OpenCV_Stuff
    cd /home/david/Programing_Stuff/Python_Stuff/OpenCV_Stuff
    mkdir Project_Drinking_Glass
    cd /home/david
    echo ""
    echo "Created the folder 'Programing_Stuff'"
fi

if [ -d Electronic_Stuff ] 
then 


    echo "Found the file 'Electronic_Stuff'"
else 
    echo "Could not find the file 'Electronic_Stuff'"
    mkdir Electronic_Stuff
    cd /home/david/Electronic_Stuff
    mkdir Eagle_Stuff
    cd /home/david/Electronic_Stuff
    mkdir KI_Cad
    
    echo ""
    echo "Created the folder 'Electronic_Stuff'"
fi

if [ -d Games ] 
then 
    echo "Found the file 'Games'"
else 
    echo "Could not find the file 'Games'"
    mkdir Games
    echo ""
    echo "Created the folder 'Games'"
fi


echo "Finished"
