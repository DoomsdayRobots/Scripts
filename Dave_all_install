#!/bin/bash
# Installs packages that are useful for a full dev environment.
# Currently targeted at 14.04

echo "Installs packages that are useful for My development environment." 
echo "Currently targeted at Linux Mint 14.04"
echo " "

#----------------Main Installs----------------
sudo apt-get install cmake
sudo apt-get install firefox
sudo apt-get install git
sudo apt-get install gitk
sudo apt-get install dropbox
cd /home/david


# Processing
cd /home/david
wget http://download.processing.org/processing-3.3.5-linux64.tgz
tar xf processing-3.3.5-linux64.tgz

rm processing-3.3.5-linux64.tgz
cd /home/david/processing-3.3.5
sh install.sh
cd /home/david
sudo apt-get update


#Add USB Support
#sudo usermod -a -G dialout $YourUserNameHere
sudo usermod -a -G dialout david
#cd /dev 
sudo chmod 777 ttyACM0
sudo chmod 777 ttyACM1
sudo chmod 777 /dev/ttyUSB0
sudo chmod 777 /dev/ttyUSB1
sudo chmod 777 /dev/ttyS0
sudo chmod 777 /dev/ttyS1
sudo chmod 777 /dev/ttyS31
sudo chmod 777 /dev/ttyS32
sudo chmod 777 /dev/ttyS33
sudo apt-get update

# Openscad
echo "Installing OpenScad" 
sudo add-apt-repository -y ppa:openscad/releases
sudo apt-get update
sudo apt-get install openscad
cd /home/david/Desktop
touch openscad.desktop
echo " 
[Desktop Entry]
Type=Application
Version=1.0
Name=OpenSCAD
Icon=/usr/share/pixmaps/openscad.png
Exec=openscad %f
MimeType=application/x-openscad;
Categories=Graphics;3DGraphics;Engineering;
Terminal=false">> openscad.desktop
chmod 777 openscad.desktop
cd /home/david
sudo apt-get update



# IDLE 2.7 
cd /home/david
sudo apt-get update
sudo apt-get install idle-python2.7

cd /home/david/Desktop
touch idle_2.7.desktop
echo " 
[Desktop Entry]
Name=IDLE (using Python-2.7)
Comment=Integrated Development Environment for Python (using Python-2.7)
Exec=/usr/bin/idle-python2.7
Icon=/usr/share/pixmaps/python2.7.xpm
Terminal=false
Type=Application
Categories=Application;Development;
StartupNotify=true
Name[en_CA]=IDLE 2.7">> idle_2.7.desktop
chmod 777 idle_2.7.desktop
cd /home/david
sudo apt-get update

# IDLE 3.4
cd /home/david
sudo apt-get install idle3


cd /home/david/Desktop
touch idle_3.4.desktop
echo "
[Desktop Entry]
Name=IDLE 3.4
Comment=Integrated Development Environment for Python (using Python-3.6)
Exec=/usr/bin/idle-python3.6
Icon=/usr/share/pixmaps/python3.6.xpm
Terminal=false
Type=Application
Categories=Application;Development;
StartupNotify=true">> idle_3.4.desktop
chmod 777 idle_3.4.desktop
cd /home/david
sudo apt-get update


# Python Pip 
sudo apt-get install python-pip 
sudo -H pip install keyboard

#----------------Open Cv Installs----------------
sudo apt-get install python-matplotlib
sudo apt-get install python-pygame
sudo apt-get install python-numpy
sudo apt-get install python-skimage
sudo apt-get install --assume-yes build-essential cmake git
sudo apt-get install --assume-yes pkg-config unzip ffmpeg qtbase5-dev python-dev python3-dev python-numpy python3-numpy
sudo apt-get install --assume-yes libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev
sudo apt-get install --assume-yes libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
sudo apt-get install --assume-yes libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev
sudo apt-get install --assume-yes libvorbis-dev libxvidcore-dev v4l-utils vtk6
sudo apt-get install --assume-yes liblapacke-dev libopenblas-dev libgdal-dev checkinstall

wget -O opencv.zip https://github.com/opencv/opencv/archive/3.3.0.zip
unzip opencv.zip
cd opencv-3.3.0

mkdir build
cd build/    
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D FORCE_VTK=ON -D WITH_TBB=ON -D WITH_V4L=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D WITH_CUBLAS=ON -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" -D WITH_GDAL=ON -D WITH_XINE=ON -D BUILD_EXAMPLES=ON ..
make -j $(($(nproc) + 1))

sudo make install
sudo /bin/bash -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig
sudo apt-get update

cd /home/david
rm /home/david opencv.zip
cd /home/david


#  Testing your OpenCV Install using Python
python
import cv2
#cv2.__version__
#'3.3.0'
sudo apt-get update


# SNES Game Emulator
sudo add-apt-repository ppa:random-stuff/ppa
sudo apt-get update
sudo apt-get install snes9x-gtk
		
# Sega Genesis Emulator
sudo apt-get install dgen
sudo apt-get update

# Nintendo Gameboy Colour Emulator
sudo apt-get install gngb
sudo apt-get update


# Nintendo DS Emulator
sudo apt-get install desmume
sudo apt-get update


# Eagle 7.6.0
echo "Installing Eagle 7.6.0"
apt-get install libcrypto++9:i386
apt-get install libfontconfig:i386
apt-get install libssl1.0.0:i386 
apt-get install libxcursor1:i386  
apt-get install libxi6:i386 
apt-get install libxrender1:i386 
apt-get install libxrandr2:i386  

wget http://web.cadsoft.de/ftp/eagle/program/7.6/eagle-lin64-7.6.0.run
sh eagle-lin64-7.6.0.run
rm eagle-lin64-7.6.0.run
mv /home/david/eagle-7.6.0 /home/david/eagle
cd /home/david/Desktop
touch eagle.desktop
echo "[Desktop Entry]
Categories=Development;Engineering;Electronics;
Comment=Design a printed circuit board.
Exec=/home/david/eagle/bin/eagle
GenericName=PCB Designer
Icon=/home/david/eagle/bin/eagleicon50.png
MimeType=application/vnd.cadsoft.eagle.board;application/vnd.cadsoft.eagle.project;application/vnd.cadsoft.eagle.schematic
Name=Eagle
Type=Application
Terminal=false" >> eagle.desktop
chmod 777 eagle.desktop
sudo apt-get update


# Dropbox 
sudo apt-get install nautilus-dropbox
sudo apt-get update


# Inkscape
sudo apt-get install inkscape
sudo apt-get update
cd /home/david/Desktop
touch inkscape.desktop
echo "[Desktop Entry]
Version=1.0
Name=Inkscape
GenericName=Vector Graphics Editor
X-GNOME-FullName=Inkscape Vector Graphics Editor
Comment=Create and edit Scalable Vector Graphics images
Type=Application
Categories=Graphics;VectorGraphics;GTK;
MimeType=image/svg+xml;image/svg+xml-compressed;application/vnd.corel-draw;application/pdf;application/postscript;image/x-eps;application/illustrator;
Exec=inkscape %F
TryExec=inkscape
Terminal=false
StartupNotify=true
Icon=inkscape
X-Ayatana-Desktop-Shortcuts=Drawing
[Drawing Shortcut Group]
Name=New Drawing
Exec=inkscape
TargetEnvironment=Unity" >> inkscape.desktop
chmod 777 inkscape.desktop
sudo apt-get update

cd /home/david
nautilus --quit
sudo apt-get update

# Pinta paint program
cd /home/david
sudo apt-get install pinta
sudo apt-get update
cd /home/david/Desktop
touch Pinta.desktop
echo "[Desktop Entry]
Name=Pinta
Comment=Easily create and edit images
GenericName=Image Editor
X-GNOME-FullName=Pinta Image Editor
Exec=pinta %F
Icon=pinta
StartupNotify=false
Terminal=false
Type=Application
Categories=Graphics;2DGraphics;
MimeType=image/bmp;">> Pinta.desktop
chmod 777 Pinta.desktop
sudo apt-get update

# Java8 program
cd /home/david
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
cd /home/david
sudo apt-get update

# Universal G-code Sender
cd /home/david
wget https://github.com/DoomsdayRobots/Scripts/raw/master/UGS_Icons/UGS_48x48.png
wget http://bit.ly/1M6z2ys
cd /home/david
mkdir /home/david/Universal_G-Code_Sender
unzip 1M6z2ys -d /home/david/Universal_G-Code_Sender
cd /home/david
rm /home/david/1M6z2ys
cd /home/david/Universal_G-Code_Sender
chmod 777 start-windows.bat
chmod 777 start.sh
cd /home/david/Universal_G-Code_Sender

cd /home/david/Desktop
touch Universal_G-code_Sender.desktop
echo "
[Desktop Entry]
Comment=
Terminal=true
Name=Universal_G-Code_Sender
Exec=/home/david/Universal_G-Code_Sender/start.sh
Type=Application
Icon=/home/david/Universal_G-Code_Sender/UGS_48x48.png
" >> Universal_G-code_Sender.desktop
chmod 777 Universal_G-code_Sender.desktop
cd /home/david
rm /home/david/UGS_48x48.png
rm /home/david/UGS_Icons
cd /home/david
sudo apt-get update

#----------------Folder creator----------------
cd /home/david
echo "This is the Script 'Find'" 
if [ -d Cad_Stuff] 
then 
    echo "Found the file 'Cad_Stuff'"
else 
    echo "Could not find the file 'Cad_Stuff'"
    mkdir Cad_Stuff
    echo ""
    echo "Created the file 'Cad_Stuff'"
fi

if [ -d Programing_Stuff ] 
then 
    echo "Found the file 'Programing_Stuff'"
else 
    echo "Could not find the file 'Programing_Stuff'"
    mkdir Programing_Stuff
    echo ""
    echo "Created the file 'Programing_Stuff'"
fi

if [ -d Electronic_Stuff ] 
then 
    echo "Found the file 'Electronic_Stuff'"
else 
    echo "Could not find the file 'Electronic_Stuff'"
    mkdir Electronic_Stuff
    echo ""
    echo "Created the file 'Electronic_Stuff'"
fi
